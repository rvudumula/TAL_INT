package routines;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
/*
 * user specification: the function's comment should contain keys as follows: 1. write about the function's comment.but
 * it must be before the "{talendTypes}" key.
 * 
 * 2. {talendTypes} 's value must be talend Type, it is required . its value should be one of: String, char | Character,
 * long | Long, int | Integer, boolean | Boolean, byte | Byte, Date, double | Double, float | Float, Object, short |
 * Short
 * 
 * 3. {Category} define a category for the Function. it is required. its value is user-defined .
 * 
 * 4. {param} 's format is: {param} <type>[(<default value or closed list values>)] <name>[ : <comment>]
 * 
 * <type> 's value should be one of: string, int, list, double, object, boolean, long, char, date. <name>'s value is the
 * Function's parameter name. the {param} is optional. so if you the Function without the parameters. the {param} don't
 * added. you can have many parameters for the Function.
 * 
 * 5. {example} gives a example for the Function. it is optional.
 */
public class LookupService
{
    public static String getPlantIDbywhclientId(final String whid, final String clientid) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C100NUPCO-EM", "C1C1");
        plantMap.put("C100NUPCO-RC", "C1C1");
        plantMap.put("C100NUPCO-DN", "C1C1");
        plantMap.put("C100NUPCO-CC", "C1C1");
        plantMap.put("C100MOH", "C2C1");
        plantMap.put("C100MOH-PMAH", "C2C1");
        plantMap.put("C100MOH-DIW", "C2C1");
        plantMap.put("C100MOH-MOH-DAIR", "C2C1");
        plantMap.put("C100MOH-MOH-DSUL", "C2C1");
        plantMap.put("C100MOH-KSMC", "C2C1");
        plantMap.put("E100NUPCO-RC", "E1C1");
        plantMap.put("E100MOH", "E2C1");
        plantMap.put("E100MODA", "E3C1");
        plantMap.put("#", "E2C1");
        plantMap.put("W100NUPCO-RC", "W1C1");
        plantMap.put("W100MOH", "W2C1");
        String result = "";
        if (plantMap.containsKey(String.valueOf(whid) + clientid)) {
            result = plantMap.get(String.valueOf(whid) + clientid);
        }
        return result;
    }
    
    public static String getStorageLocationbywhclientId(final String whid, final String clientid) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C100NUPCO-EM", "1000");
        plantMap.put("C100NUPCO-RC", "2000");
        plantMap.put("C100NUPCO-DN", "3000");
        plantMap.put("C100NUPCO-CC", "7000");
        plantMap.put("C100MOH", "1000");
        plantMap.put("C100MOH-PMAH", "2000");
        plantMap.put("C100MOH-DIW", "3000");
        plantMap.put("C100MOH-MOH-DAIR", "4000");
        plantMap.put("C100MOH-MOH-DSUL", "5000");
        plantMap.put("C100MOH-KSMC", "6000");
        plantMap.put("E100NUPCO-RC", "1000");
        plantMap.put("E100MOH", "1000");
        plantMap.put("E100MODA", "1000");
        plantMap.put("#", "2000");
        plantMap.put("W100NUPCO-RC", "1000");
        plantMap.put("W100MOH", "1000");
        String result = "";
        if (plantMap.containsKey(String.valueOf(whid) + clientid)) {
            result = plantMap.get(String.valueOf(whid) + clientid);
        }
        return result;
    }
    
    public static String getWHID(final String plantid) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");        
        plantMap.put("C3C1", "C100");
        plantMap.put("E1C1", "E100");
        plantMap.put("E2C1", "E100");
        plantMap.put("E3C1", "E100");
        plantMap.put("E2C1", "");
        plantMap.put("W1C1", "W100");
        plantMap.put("W2C1", "W100");
        String result = "";
        if (plantMap.containsKey(plantid)) {
            result = plantMap.get(plantid);
        }
        return result;
    }
    
    public static String getClientId(final String plantid) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C1C1", "NUPCO-EM");
        plantMap.put("C1C1", "NUPCO-RC");
        plantMap.put("C1C1", "NUPCO-DN");
        plantMap.put("C1C1", "NUPCO-CC");
        plantMap.put("C2C1", "MOH");
        plantMap.put("C2C1", "MOH-PMAH");
        plantMap.put("C2C1", "MOH-DIW");
        plantMap.put("C2C1", "MOH-DAIR");
        plantMap.put("C2C1", "MOH-DSUL");
        plantMap.put("C2C1", "KSMC");
        plantMap.put("C3C1", "KSMC");
        plantMap.put("E1C1", "NUPCO-RC");
        plantMap.put("E2C1", "MOH");
        plantMap.put("E3C1", "MODA");
        plantMap.put("E2C1", "");
        plantMap.put("W1C1", "NUPCO-RC");
        plantMap.put("W2C1", "MOH");
        String result = "";
        if (plantMap.containsKey(plantid)) {
            result = plantMap.get(plantid);
        }
        return result;
    }
    
    public static String getClientIdByplantstorage(final String plantid, final String stoloc) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C1C11000", "NUPCO-EM");
        plantMap.put("C1C12000", "NUPCO-RC");
        plantMap.put("C1C13000", "NUPCO-DN");
        plantMap.put("C1C17000", "NUPCO-CC");
        plantMap.put("C2C11000", "MOH");
        plantMap.put("C2C12000", "MOH-PMAH");
        plantMap.put("C2C13000", "MOH-DIW");
        plantMap.put("C2C14000", "MOH-DAIR");
        plantMap.put("C2C15000", "MOH-DSUL");
        plantMap.put("C2C16000", "KSMC");
        plantMap.put("C3C1", "KSMC");
        plantMap.put("E1C11000", "NUPCO-RC");
        plantMap.put("E2C11000", "MOH");
        plantMap.put("E3C11000", "MODA");
        plantMap.put("E2C12000", "");
        plantMap.put("W1C11000", "NUPCO-RC");
        plantMap.put("W2C11000", "MOH");
        String result = "";
        if (plantMap.containsKey(String.valueOf(plantid) + stoloc)) {
            result = plantMap.get(String.valueOf(plantid) + stoloc);
        }
        return result;
    }
    
    public static String getWareHouseByPlant(final String plantid) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C1C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C2C1", "C100");
        plantMap.put("C3C1", "#");
        plantMap.put("E1C1", "E100");
        plantMap.put("E2C1", "E100");
        plantMap.put("E3C1", "E100");
        plantMap.put("E2C1", "E100");
        plantMap.put("W1C1", "W100");
        plantMap.put("W2C1", "W100");
        String result = "";
        if (plantMap.containsKey(plantid)) {
            result = plantMap.get(plantid);
        }
        return result;
    }
    
    public static String getWareHouseByPlantStorage(final String plantid, final String storaeg) {
        final HashMap<String, String> plantMap = new LinkedHashMap<String, String>();
        plantMap.put("C1C11000", "C100");
        plantMap.put("C1C12000", "C100");
        plantMap.put("C1C13000", "C100");
        plantMap.put("C1C17000", "C100");
        plantMap.put("C2C11000", "C100");
        plantMap.put("C2C12000", "C100");
        plantMap.put("C2C13000", "C100");
        plantMap.put("C2C14000", "C100");
        plantMap.put("C2C15000", "C100");
        plantMap.put("C2C16000", "C100");
        plantMap.put("C3C11000", "#");
        plantMap.put("E1C11000", "E100");
        plantMap.put("E2C11000", "E100");
        plantMap.put("E3C11000", "E100");
        plantMap.put("E2C12000", "E100");
        plantMap.put("W1C11000", "W100");
        plantMap.put("W2C11000", "W100");
        String result = "";
        if (plantMap.containsKey(String.valueOf(plantid) + storaeg)) {
            result = plantMap.get(String.valueOf(plantid) + storaeg);
        }
        return result;
    }
    
    public static String formatDate(final String d) {
        String result = "";
        try {
            final SimpleDateFormat ddf = new SimpleDateFormat("yyyy-MM-dd");
            final SimpleDateFormat cf = new SimpleDateFormat("yyyyMMddHHmmss");
            final Calendar c1 = Calendar.getInstance();
            c1.setTime(ddf.parse(d));
            final Date cd = c1.getTime();
            result = cf.format(cd);
            return result;
        }
        catch (Exception e) {
            System.out.println("Exception in formatdate" + e);
            return d;
        }
    }
}